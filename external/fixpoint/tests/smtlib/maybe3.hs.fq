//qualif NonNull(v: [a])        : (? (nonnull([v])))
//qualif Null(v: [a])           : (~ (? (nonnull([v]))))
//qualif EqNull(v:Bool, ~A: [a]): (Prop(v) <=> (? (nonnull([~A]))))

qualif IsEmp(v:Bool, ~A: [a]) : (Prop(v) <=> len([~A]) [ > ;  = ] 0)
qualif ListZ(v: [a])          : len([v]) [ = ; >= ; > ] 0 
qualif SameLen(v:[a], ~A:[b]) : len([v]) = len([~A]) 
qualif EqLen(v:int, ~A: [a])  : v = len([~A]) 
qualif LenEq(v:[a], ~A: int)  : ~A = len([v]) 
qualif LenAcc(v:int, ~A:[a], ~B: int): v = len([~A]) + ~B
qualif LenDiff(v:[a], ~A:int): len([v]) = (~A [ +; - ] 1)
//BOT: Do not delete EVER!

qualif Bot(v:@(0))    : 0 = 1 
qualif Bot(v:obj)     : 0 = 1 
qualif Bot(v:a)       : 0 = 1 
qualif Bot(v:bool)    : 0 = 1 
qualif Bot(v:int)     : 0 = 1 
qualif CmpZ(v:a)      : v [ < ; <= ; > ; >= ; = ; != ] 0
qualif Cmp(v:a,~A:a)  : v [ < ; <= ; > ; >= ; = ; != ] ~A
qualif One(v:int)     : v = 1
qualif True(v:bool)   : (? v) 
qualif False(v:bool)  : ~ (? v) 
qualif True1(v:Bool)   : Prop(v) 
qualif False1(v:Bool)  : ~ Prop(v) 


qualif Papp(v:a,~P:Pred a) : papp1(~P, v)
constant papp1 : func(2, [Pred @(0); @(1); bool])

qualif Papp2(v:a,~X:b,~P:Pred a b) : papp2(~P, v, ~X)
constant papp2 : func(4, [Pred @(0) @(1); @(2); @(3); bool])

constant Prop : func(0, [Bool; bool])
qualif Auto(v : Maybe a_ac4 , ~A0 : Maybe a_ac4): (v = ~A0)
qualif Auto(VV : a_ac4 , ~A0 : Maybe a_ac4): (? isJust([~A0]))
qualif Auto(VV : a_ac4 , ~A0 : Maybe a_ac4): (VV = fromJust([~A0]))
qualif Auto(v : Maybe a_ac4 , ~A0 : Maybe a_ac4): (&& [(? isJust([~A0]));
                                                       (? isJust([v]))] => (fromJust([v]) >= fromJust([~A0])))
qualif Auto(v : Maybe a_ac4 , ~A0 : Maybe a_ac4): (v = ~A0)
qualif Auto(VV : a_ac4 , ~A0 : Maybe a_ac4): (? isJust([~A0]))
qualif Auto(VV : a_ac4 , ~A0 : Maybe a_ac4): (VV = fromJust([~A0]))
qualif Auto(VV : a_ac2 , ~A0 : Maybe a_ac2): ((? isJust([~A0])) => (VV <= fromJust([~A0])))
constant cmp : func(0, [Ordering; Ordering])
constant fromJust : func(1, [Maybe @(0); @(0)])
constant isJust : func(1, [Maybe @(0); bool])
constant len : func(1, [[@(0)]; int])
bind 0 True#6u : {VV#3 : Bool | []}
bind 1 True#6u : {VV#6 : Bool | [(? Prop([VV#6]))]}
bind 2 EQ#6U : {VV#7 : Ordering | [(cmp([VV#7]) = EQ#6U)]}
bind 3 GT#6W : {VV#18 : Ordering | [(cmp([VV#18]) = GT#6W)]}
bind 4 LT#6S : {VV#20 : Ordering | [(cmp([VV#20]) = LT#6S)]}
bind 5 hi#abS : {VV#23 : Maybe a_ac2 | [k_24]}
bind 6 lo#abT : {VV#28 : Maybe a_ac2 | [k_29]}
bind 7 lo0#abO : {VV#33 : Maybe a_ac4 | [k_34]}
bind 8 lo#abP : {VV#38 : Maybe a_ac4 | [k_39]}
bind 9 hi0#abQ : {VV#43 : Maybe a_ac4 | [k_44]}
bind 10 hi#abR : {VV#48 : Maybe a_ac4 | [k_49]}
bind 11 lq_anf__dc7 : {VV#55 : Maybe a_ac4 | [k_56[x:=hi#abR];
                                              (VV#55 = hi#abR)]}
bind 12 lq_anf__dc8 : {VV#60 : Maybe a_ac4 | [k_61[x:=lo#abP];
                                              (VV#60 = lo#abP)]}
bind 13 VV#65 : {VV#65 : Maybe a_ac4 | []}
bind 14 lo0 : {VV#67 : Maybe a_ac4 | []}
bind 15 VV#68 : {VV#68 : Maybe a_ac4 | [(VV#68 = lo0)]}
bind 16 lo : {v : Maybe a_ac4 | [(v = lo0)]}
bind 17 VV#71 : {VV#71 : Maybe a_ac4 | []}
bind 18 hi0 : {VV#73 : Maybe a_ac4 | []}
bind 19 VV#74 : {VV#74 : Maybe a_ac4 | [&& [(&& [(? isJust([lo]));
                                                 (? isJust([VV#74]))] => (fromJust([VV#74]) >= fromJust([lo])));
                                            (VV#74 = hi0)]]}
bind 20 hi : {v : Maybe a_ac4 | [&& [(&& [(? isJust([lo]));
                                          (? isJust([v]))] => (fromJust([v]) >= fromJust([lo])));
                                     (v = hi0)]]}
bind 21 VV#77 : {VV#77 : Bool | [k_52[lo0#abO:=lo0][lo#abP:=lo][hi0#abQ:=hi0][hi#abR:=hi][VV#51:=VV#77]]}
bind 22 VV#79 : {VV#79 : Bool | []}
bind 23 VV#81 : {VV#81 : Maybe a_ac4 | [k_61[x:=lo#abP][VV#60:=VV#81];
                                        (VV#81 = lo#abP);
                                        (VV#81 = lq_anf__dc8)]}
bind 24 VV#83 : {VV#83 : Maybe a_ac4 | [k_56[x:=hi#abR][VV#55:=VV#83];
                                        (VV#83 = hi#abR);
                                        (VV#83 = lq_anf__dc7)]}
bind 25 VV#85 : {VV#85 : Maybe a_ac4 | [k_39[VV#38:=VV#85];
                                        (VV#85 = lo#abP)]}
bind 26 VV#87 : {VV#87 : Maybe a_ac4 | [k_49[VV#48:=VV#87];
                                        (VV#87 = hi#abR)]}
bind 27 VV#89 : {VV#89 : Maybe a_ac2 | []}
bind 28 hi : {VV#91 : Maybe a_ac2 | []}
bind 29 VV#92 : {VV#92 : Maybe a_ac2 | []}
bind 30 lo : {_LIQUID_dummy : Maybe a_ac2 | []}
bind 31 VV#95 : {VV#95 : Bool | [(? Prop([VV#95]));
                                 (VV#95 = True#6u)]}
bind 32 VV#33 : {VV#33 : Maybe a_ac4 | [k_34]}
bind 33 VV#38 : {VV#38 : Maybe a_ac4 | [k_39]}
bind 34 VV#43 : {VV#43 : Maybe a_ac4 | [k_44]}
bind 35 VV#48 : {VV#48 : Maybe a_ac4 | [k_49]}
bind 36 VV#60 : {VV#60 : Maybe a_ac4 | [k_61]}
bind 37 VV#55 : {VV#55 : Maybe a_ac4 | [k_56]}
bind 38 VV#51 : {VV#51 : Bool | [k_52]}
bind 39 VV#23 : {VV#23 : Maybe a_ac2 | [k_24]}
bind 40 VV#28 : {VV#28 : Maybe a_ac2 | [k_29]}


constraint:
  env [0; 1; 2; 3; 4]
  grd true
  lhs {VV#F16 : Maybe a_ac2 | []}
  rhs {VV#F16 : Maybe a_ac2 | [k_24[VV#23:=VV#F16][VV#89:=VV#F16][VV#F:=VV#F16]]}
  id 16 tag [1]


constraint:
  env [0; 1; 2; 3; 4]
  grd true
  lhs {VV#F1 : Maybe a_ac4 | []}
  rhs {VV#F1 : Maybe a_ac4 | [k_34[VV#33:=VV#F1][VV#65:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [2]


constraint:
  env [0; 1; 2; 3; 4; 27]
  grd true
  lhs {VV#F17 : a_ac2 | []}
  rhs {VV#F17 : a_ac2 | [k_22[VV#23:=VV#89][VV#21:=VV#F17][VV#F:=VV#F17]]}
  id 17 tag [1]


constraint:
  env [0; 1; 2; 3; 4; 13]
  grd true
  lhs {VV#F2 : a_ac4 | []}
  rhs {VV#F2 : a_ac4 | [k_32[VV#33:=VV#65][VV#31:=VV#F2][VV#F:=VV#F2]]}
  id 2 tag [2]


constraint:
  env [0; 1; 2; 3; 4; 28]
  grd true
  lhs {VV#F18 : Maybe a_ac2 | []}
  rhs {VV#F18 : Maybe a_ac2 | [k_29[hi#abS:=hi][VV#28:=VV#F18][VV#92:=VV#F18][VV#F:=VV#F18]]}
  id 18 tag [1]


constraint:
  env [0; 1; 2; 3; 4; 14]
  grd true
  lhs {VV#F3 : Maybe a_ac4 | [(VV#F3 = lo0)]}
  rhs {VV#F3 : Maybe a_ac4 | [k_39[lo0#abO:=lo0][VV#38:=VV#F3][VV#68:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [2]


constraint:
  env [0; 1; 2; 3; 4; 28; 29]
  grd true
  lhs {VV#F19 : a_ac2 | [((? isJust([hi])) => (VV#F19 <= fromJust([hi])))]}
  rhs {VV#F19 : a_ac2 | [k_27[hi#abS:=hi][VV#28:=VV#92][VV#26:=VV#F19][VV#F:=VV#F19]]}
  id 19 tag [1]


constraint:
  env [0; 1; 2; 3; 4; 14; 15]
  grd true
  lhs {VV#F4 : a_ac4 | [&& [(? isJust([lo0]));
                            (VV#F4 = fromJust([lo0]))]]}
  rhs {VV#F4 : a_ac4 | [k_37[lo0#abO:=lo0][VV#38:=VV#68][VV#36:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [2]


constraint:
  env [0; 16; 1; 2; 3; 4; 14]
  grd true
  lhs {VV#F5 : Maybe a_ac4 | []}
  rhs {VV#F5 : Maybe a_ac4 | [k_44[lo0#abO:=lo0][lo#abP:=lo][VV#43:=VV#F5][VV#71:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [2]


constraint:
  env [0; 16; 1; 17; 2; 3; 4; 14]
  grd true
  lhs {VV#F6 : a_ac4 | []}
  rhs {VV#F6 : a_ac4 | [k_42[lo0#abO:=lo0][lo#abP:=lo][VV#43:=VV#71][VV#41:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [2]


constraint:
  env [0; 16; 1; 2; 18; 3; 4; 14]
  grd true
  lhs {VV#F7 : Maybe a_ac4 | [&& [(&& [(? isJust([lo]));
                                       (? isJust([VV#F7]))] => (fromJust([VV#F7]) >= fromJust([lo])));
                                  (VV#F7 = hi0)]]}
  rhs {VV#F7 : Maybe a_ac4 | [k_49[lo0#abO:=lo0][lo#abP:=lo][hi0#abQ:=hi0][VV#48:=VV#F7][VV#74:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [2]


constraint:
  env [0; 16; 1; 2; 18; 3; 19; 4; 14]
  grd true
  lhs {VV#F8 : a_ac4 | [&& [(? isJust([hi0]));
                            (VV#F8 = fromJust([hi0]))]]}
  rhs {VV#F8 : a_ac4 | [k_47[lo0#abO:=lo0][lo#abP:=lo][hi0#abQ:=hi0][VV#48:=VV#74][VV#46:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [2]


constraint:
  env [0; 1; 2; 3; 4; 7; 8; 9; 10; 11; 12]
  grd true
  lhs {VV#F9 : Bool | []}
  rhs {VV#F9 : Bool | [k_52[VV#51:=VV#F9][VV#79:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [2]


constraint:
  env [0; 1; 2; 3; 4; 7; 23; 8; 9; 10; 11; 12]
  grd true
  lhs {VV#F10 : a_ac4 | [k_59[x:=lo#abP][VV#60:=VV#81][VV#58:=VV#F10][VV#F:=VV#F10]]}
  rhs {VV#F10 : a_ac4 | [k_64[hi:=lq_anf__dc7][_LIQUID_dummy:=VV#81][VV#63:=VV#F10][VV#F:=VV#F10];
                         ((? isJust([lq_anf__dc7])) => (VV#F10 <= fromJust([lq_anf__dc7])))]}
  id 10 tag [2]


constraint:
  env [0; 1; 2; 3; 4; 7; 8; 24; 9; 10; 11; 12]
  grd true
  lhs {VV#F11 : a_ac4 | [k_54[x:=hi#abR][VV#55:=VV#83][VV#53:=VV#F11][VV#F:=VV#F11]]}
  rhs {VV#F11 : a_ac4 | [k_64[VV:=VV#83][VV#63:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [2]


constraint:
  env [0; 1; 2; 3; 4; 7; 8; 9; 10; 11]
  grd true
  lhs {VV#F12 : Maybe a_ac4 | [k_39[VV#38:=VV#F12][VV#85:=VV#F12][VV#F:=VV#F12];
                               (VV#F12 = lo#abP)]}
  rhs {VV#F12 : Maybe a_ac4 | [k_61[VV#60:=VV#F12][VV#85:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [2]


constraint:
  env [0; 1; 2; 3; 4; 7; 8; 9; 25; 10; 11]
  grd true
  lhs {VV#F13 : a_ac4 | [k_37[VV#38:=VV#85][VV#36:=VV#F13][VV#F:=VV#F13]]}
  rhs {VV#F13 : a_ac4 | [k_59[VV#60:=VV#85][VV#58:=VV#F13][VV#F:=VV#F13]]}
  id 13 tag [2]


constraint:
  env [0; 1; 2; 3; 4; 7; 8; 9; 10]
  grd true
  lhs {VV#F14 : Maybe a_ac4 | [k_49[VV#48:=VV#F14][VV#87:=VV#F14][VV#F:=VV#F14];
                               (VV#F14 = hi#abR)]}
  rhs {VV#F14 : Maybe a_ac4 | [k_56[VV#55:=VV#F14][VV#87:=VV#F14][VV#F:=VV#F14]]}
  id 14 tag [2]


constraint:
  env [0; 1; 2; 3; 4; 7; 8; 9; 10; 26]
  grd true
  lhs {VV#F15 : a_ac4 | [k_47[VV#48:=VV#87][VV#46:=VV#F15][VV#F:=VV#F15]]}
  rhs {VV#F15 : a_ac4 | [k_54[VV#55:=VV#87][VV#53:=VV#F15][VV#F:=VV#F15]]}
  id 15 tag [2]


wf:
  env [0; 1; 2; 3; 4]
  reft {VV#33 : Maybe a_ac4 | [k_34]}
  


wf:
  env [0; 32; 1; 2; 3; 4]
  reft {VV#31 : a_ac4 | [k_32]}
  


wf:
  env [0; 1; 2; 3; 4; 7]
  reft {VV#38 : Maybe a_ac4 | [k_39]}
  


wf:
  env [0; 1; 33; 2; 3; 4; 7]
  reft {VV#36 : a_ac4 | [k_37]}
  


wf:
  env [0; 1; 2; 3; 4; 7; 8]
  reft {VV#43 : Maybe a_ac4 | [k_44]}
  


wf:
  env [0; 1; 2; 34; 3; 4; 7; 8]
  reft {VV#41 : a_ac4 | [k_42]}
  


wf:
  env [0; 1; 2; 3; 4; 7; 8; 9]
  reft {VV#48 : Maybe a_ac4 | [k_49]}
  


wf:
  env [0; 1; 2; 3; 35; 4; 7; 8; 9]
  reft {VV#46 : a_ac4 | [k_47]}
  


wf:
  env [0; 1; 2; 3; 4; 7; 8; 9; 10; 11; 12]
  reft {VV#63 : a_ac4 | [k_64]}
  


wf:
  env [0; 1; 2; 3; 4; 7; 8; 9; 10; 11]
  reft {VV#60 : Maybe a_ac4 | [k_61]}
  


wf:
  env [0; 1; 2; 3; 4; 36; 7; 8; 9; 10; 11]
  reft {VV#58 : a_ac4 | [k_59]}
  


wf:
  env [0; 1; 2; 3; 4; 7; 8; 9; 10]
  reft {VV#55 : Maybe a_ac4 | [k_56]}
  


wf:
  env [0; 1; 2; 3; 4; 37; 7; 8; 9; 10]
  reft {VV#53 : a_ac4 | [k_54]}
  


wf:
  env [0; 1; 2; 3; 4; 7; 8; 9; 10]
  reft {VV#51 : Bool | [k_52]}
  


wf:
  env [0; 1; 2; 3; 4]
  reft {VV#23 : Maybe a_ac2 | [k_24]}
  


wf:
  env [0; 1; 2; 3; 4; 39]
  reft {VV#21 : a_ac2 | [k_22]}
  


wf:
  env [0; 1; 2; 3; 4; 5]
  reft {VV#28 : Maybe a_ac2 | [k_29]}
  


wf:
  env [0; 1; 2; 3; 4; 5; 40]
  reft {VV#26 : a_ac2 | [k_27]}
  

