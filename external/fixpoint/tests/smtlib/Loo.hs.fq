//qualif NonNull(v: [a])        : (? (nonnull([v])))
//qualif Null(v: [a])           : (~ (? (nonnull([v]))))
//qualif EqNull(v:Bool, ~A: [a]): (Prop(v) <=> (? (nonnull([~A]))))

qualif IsEmp(v:Bool, ~A: [a]) : (Prop(v) <=> len([~A]) [ > ;  = ] 0)
qualif ListZ(v: [a])          : len([v]) [ = ; >= ; > ] 0 
qualif SameLen(v:[a], ~A:[b]) : len([v]) = len([~A]) 
qualif EqLen(v:int, ~A: [a])  : v = len([~A]) 
qualif LenEq(v:[a], ~A: int)  : ~A = len([v]) 
qualif LenAcc(v:int, ~A:[a], ~B: int): v = len([~A]) + ~B
qualif LenDiff(v:[a], ~A:int): len([v]) = (~A [ +; - ] 1)
//BOT: Do not delete EVER!

qualif Bot(v:@(0))    : 0 = 1 
qualif Bot(v:obj)     : 0 = 1 
qualif Bot(v:a)       : 0 = 1 
qualif Bot(v:bool)    : 0 = 1 
qualif Bot(v:int)     : 0 = 1 
qualif CmpZ(v:a)      : v [ < ; <= ; > ; >= ; = ; != ] 0
qualif Cmp(v:a,~A:a)  : v [ < ; <= ; > ; >= ; = ; != ] ~A
qualif One(v:int)     : v = 1
qualif True(v:bool)   : (? v) 
qualif False(v:bool)  : ~ (? v) 
qualif True1(v:Bool)   : Prop(v) 
qualif False1(v:Bool)  : ~ Prop(v) 


qualif Papp(v:a,~P:Pred a) : papp1(~P, v)
constant papp1 : func(2, [Pred @(0); @(1); bool])

qualif Papp2(v:a,~X:b,~P:Pred a b) : papp2(~P, v, ~X)
constant papp2 : func(4, [Pred @(0) @(1); @(2); @(3); bool])

constant Prop : func(0, [Bool; bool])
qualif Auto(VV : int , ~A0 : int): (VV > ~A0)
constant cmp : func(0, [Ordering; Ordering])
constant fromJust : func(1, [Maybe @(0); @(0)])
constant isJust : func(1, [Maybe @(0); bool])
constant len : func(1, [[@(0)]; int])
bind 0 pp#rbi : {VV : func(0, [int; int]) | []}
bind 1 plusOne#r9G : {VV : func(0, [int; int]) | []}
bind 2 plusTwo#raM : {VV : func(0, [int; int]) | []}
bind 3 plusOne#r9G : {VV : func(0, [int; int]) | []}
bind 4 LT#6S : {VV#28 : Ordering | [(cmp([VV#28]) = LT#6S)]}
bind 5 EQ#6U : {VV#31 : Ordering | [(cmp([VV#31]) = EQ#6U)]}
bind 6 GT#6W : {VV#33 : Ordering | [(cmp([VV#33]) = GT#6W)]}
bind 7 a_adG : {VV : num | []}
bind 8 x#adx : {VV#36 : a_adG | [k_37]}
bind 9 lq_anf__ddV : {VV#41 : int | [(VV#41 = 1)]}
bind 10 lq_anf__ddW : {VV : a_adG | [(VV = lq_anf__ddV)]}
bind 11 x#adw : {VV#44 : int | [k_45]}
bind 12 lq_anf__ddX : {VV#49 : int | [(VV#49 > x#adw)]}
bind 13 plusFour#rbh : {VV : func(0, [int; int]) | []}
bind 14 plusThree#rbg : {VV : func(0, [int; int]) | []}
bind 15 VV#64 : {VV#64 : int | [k_62[lq_tmp_x5:=plusOne#r9G][VV#61:=VV#64]]}
bind 16 lq_tmp_x8 : {VV#61 : int | [k_62[lq_tmp_x5:=plusOne#r9G]]}
bind 17 VV#67 : {VV#67 : int | []}
bind 18 VV#69 : {VV#69 : int | [k_58[VV#57:=VV#69]]}
bind 19 lq_tmp_x6 : {VV#57 : int | [k_58]}
bind 20 VV#72 : {VV#72 : int | [(VV#72 > lq_tmp_x6)]}
bind 21 VV#74 : {VV#74 : int | [k_55[lq_tmp_x5:=plusTwo#raM][VV#54:=VV#74]]}
bind 22 lq_tmp_x8 : {VV#54 : int | [k_55[lq_tmp_x5:=plusTwo#raM]]}
bind 23 VV#77 : {VV#77 : int | []}
bind 24 VV#79 : {VV#79 : int | [k_51[VV#50:=VV#79]]}
bind 25 lq_tmp_x6 : {VV#50 : int | [k_51]}
bind 26 VV#82 : {VV#82 : int | []}
bind 27 VV#84 : {VV#84 : int | []}
bind 28 z : {VV#86 : int | []}
bind 29 VV#87 : {VV#87 : int | [k_48[x#adw:=z][VV#47:=VV#87]]}
bind 30 VV#89 : {VV#89 : int | [(VV#89 > lq_anf__ddX)]}
bind 31 VV#91 : {VV#91 : int | [(VV#91 > x#adw);
                                (VV#91 = lq_anf__ddX)]}
bind 32 VV#93 : {VV#93 : int | [k_45[VV#44:=VV#93];
                                (VV#93 = x#adw)]}
bind 33 VV#95 : {VV#95 : int | [(VV#95 = 1);
                                (VV#95 = lq_anf__ddV)]}
bind 34 VV#61 : {VV#61 : int | [k_62]}
bind 35 VV#59 : {VV#59 : int | [k_60]}
bind 36 VV#57 : {VV#57 : int | [k_58]}
bind 37 VV#54 : {VV#54 : int | [k_55]}
bind 38 VV#52 : {VV#52 : int | [k_53]}
bind 39 VV#50 : {VV#50 : int | [k_51]}
bind 40 VV#44 : {VV#44 : int | [k_45]}
bind 41 VV#47 : {VV#47 : int | [k_48]}


constraint:
  env [0; 16; 1; 2; 3; 4; 5; 6; 13]
  grd true
  lhs {VV#F1 : int | []}
  rhs {VV#F1 : int | [k_58[lq_tmp_x5:=plusOne#r9G][VV#57:=VV#F1][VV#67:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [4]


constraint:
  env [0; 1; 2; 3; 19; 4; 5; 6; 13]
  grd true
  lhs {VV#F2 : int | [(VV#F2 > lq_tmp_x6)]}
  rhs {VV#F2 : int | [k_60[VV#59:=VV#F2][VV#72:=VV#F2][VV#F:=VV#F2]]}
  id 2 tag [4]


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 22]
  grd true
  lhs {VV#F3 : int | []}
  rhs {VV#F3 : int | [k_51[lq_tmp_x5:=plusTwo#raM][VV#50:=VV#F3][VV#77:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [3]


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 25]
  grd true
  lhs {VV#F4 : int | []}
  rhs {VV#F4 : int | [k_53[VV#52:=VV#F4][VV#82:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [3]


constraint:
  env [0; 1; 2; 3; 4; 5; 6]
  grd true
  lhs {VV#F5 : int | []}
  rhs {VV#F5 : int | [k_45[VV#44:=VV#F5][VV#84:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [2]


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 28]
  grd true
  lhs {VV#F6 : int | [k_48[x#adw:=z][VV#47:=VV#F6][VV#87:=VV#F6][VV#F:=VV#F6]]}
  rhs {VV#F6 : int | [(VV#F6 > z)]}
  id 6 tag [2]


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 11; 12]
  grd true
  lhs {VV#F7 : int | [(VV#F7 > lq_anf__ddX)]}
  rhs {VV#F7 : int | [k_48[VV#47:=VV#F7][VV#89:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [2]


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10]
  grd true
  lhs {VV#F8 : a_adG | [(VV#F8 = (x#adx + lq_anf__ddW))]}
  rhs {VV#F8 : a_adG | [k_40[VV#39:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [1]


wf:
  env [0; 1; 2; 3; 4; 5; 6; 13]
  reft {VV#61 : int | [k_62]}
  


wf:
  env [0; 1; 2; 3; 4; 5; 6; 13]
  reft {VV#59 : int | [k_60]}
  


wf:
  env [0; 1; 2; 3; 4; 5; 6; 13]
  reft {VV#57 : int | [k_58]}
  


wf:
  env [0; 1; 2; 3; 4; 5; 6]
  reft {VV#54 : int | [k_55]}
  


wf:
  env [0; 1; 2; 3; 4; 5; 6]
  reft {VV#52 : int | [k_53]}
  


wf:
  env [0; 1; 2; 3; 4; 5; 6]
  reft {VV#50 : int | [k_51]}
  


wf:
  env [0; 1; 2; 3; 4; 5; 6]
  reft {VV#44 : int | [k_45]}
  


wf:
  env [0; 1; 2; 3; 4; 5; 6; 11]
  reft {VV#47 : int | [k_48]}
  


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7]
  reft {VV#36 : a_adG | [k_37]}
  


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8]
  reft {VV#39 : a_adG | [k_40]}
  

