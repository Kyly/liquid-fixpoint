//qualif NonNull(v: [a])        : (? (nonnull([v])))
//qualif Null(v: [a])           : (~ (? (nonnull([v]))))
//qualif EqNull(v:Bool, ~A: [a]): (Prop(v) <=> (? (nonnull([~A]))))

qualif IsEmp(v:Bool, ~A: [a]) : (Prop(v) <=> len([~A]) [ > ;  = ] 0)
qualif ListZ(v: [a])          : len([v]) [ = ; >= ; > ] 0 
qualif SameLen(v:[a], ~A:[b]) : len([v]) = len([~A]) 
qualif EqLen(v:int, ~A: [a])  : v = len([~A]) 
qualif LenEq(v:[a], ~A: int)  : ~A = len([v]) 
qualif LenAcc(v:int, ~A:[a], ~B: int): v = len([~A]) + ~B
qualif LenDiff(v:[a], ~A:int): len([v]) = (~A [ +; - ] 1)
//BOT: Do not delete EVER!

qualif Bot(v:@(0))    : 0 = 1 
qualif Bot(v:obj)     : 0 = 1 
qualif Bot(v:a)       : 0 = 1 
qualif Bot(v:bool)    : 0 = 1 
qualif Bot(v:int)     : 0 = 1 
qualif CmpZ(v:a)      : v [ < ; <= ; > ; >= ; = ; != ] 0
qualif Cmp(v:a,~A:a)  : v [ < ; <= ; > ; >= ; = ; != ] ~A
qualif One(v:int)     : v = 1
qualif True(v:bool)   : (? v) 
qualif False(v:bool)  : ~ (? v) 
qualif True1(v:Bool)   : Prop(v) 
qualif False1(v:Bool)  : ~ Prop(v) 


qualif Papp(v:a,~P:Pred a) : papp1(~P, v)
constant papp1 : func(2, [Pred @(0); @(1); bool])

qualif Papp2(v:a,~X:b,~P:Pred a b) : papp2(~P, v, ~X)
constant papp2 : func(4, [Pred @(0) @(1); @(2); @(3); bool])

constant Prop : func(0, [Bool; bool])
constant cmp : func(0, [Ordering; Ordering])
constant fromJust : func(1, [Maybe @(0); @(0)])
constant isJust : func(1, [Maybe @(0); bool])
constant len : func(1, [[@(0)]; int])
bind 0 False#68 : {VV#17 : Bool | []}
bind 1 I##6c : {VV : func(0, [int; int]) | []}
bind 2 True#6u : {VV#19 : Bool | []}
bind 3 liquidAssertB#r7 : {VV : func(0, [Bool; Bool]) | []}
bind 4 choose#rh : {VV : func(0, [int; int]) | []}
bind 5 liquidAssertB#r7 : {VV : func(0, [Bool; Bool]) | []}
bind 6 I##6c : {VV : func(0, [int; int]) | []}
bind 7 True#6u : {VV#31 : Bool | [(? Prop([VV#31]))]}
bind 8 False#68 : {VV#32 : Bool | [(~ ((? Prop([VV#32]))))]}
bind 9 EQ#6U : {VV#39 : Ordering | [(cmp([VV#39]) = EQ#6U)]}
bind 10 LT#6S : {VV#40 : Ordering | [(cmp([VV#40]) = LT#6S)]}
bind 11 GT#6W : {VV#42 : Ordering | [(cmp([VV#42]) = GT#6W)]}
bind 12 a_awy : {VV : num | []}
bind 13 x#awl : {VV#49 : a_awy | [k_50]}
bind 14 lq_anf__dwU : {VV#54 : int | [(VV#54 = 0)]}
bind 15 lq_anf__dwV : {VV : a_awy | [(VV = lq_anf__dwU)]}
bind 16 lq_anf__dwW : {VV#58 : Bool | [((? Prop([VV#58])) <=> (x#awl > lq_anf__dwV))]}
bind 17 lq_anf__dwX : {VV#58 : Bool | [((? Prop([VV#58])) <=> (x#awl > lq_anf__dwV));
                                       (VV#58 = lq_anf__dwW)]}
bind 18 lq_anf__dwX : {VV#58 : Bool | [((? Prop([VV#58])) <=> (x#awl > lq_anf__dwV));
                                       (VV#58 = lq_anf__dwW);
                                       (~ ((? Prop([VV#58]))));
                                       (~ ((? Prop([VV#58]))))]}
bind 19 lq_anf__dwY : {VV#61 : int | [(VV#61 = 0)]}
bind 20 lq_anf__dwZ : {VV : a_awy | [(VV = lq_anf__dwY)]}
bind 21 lq_anf__dwX : {VV#58 : Bool | [((? Prop([VV#58])) <=> (x#awl > lq_anf__dwV));
                                       (VV#58 = lq_anf__dwW);
                                       (? Prop([VV#58]));
                                       (? Prop([VV#58]))]}
bind 22 lq_anf__dx0 : {VV#67 : int | [(VV#67 = (0  :  int))]}
bind 23 n1#awm : {VV#68 : int | []}
bind 24 lq_anf__dx1 : {VV#69 : int | [k_53[VV#52:=VV#69][fix##36#dNum#35#awz:=fix##36#fNumInt#35#r1K][fix##36#dOrd#35#awA:=fix##36#fOrdInt#35#r3n][x#awl:=n1#awm][VV:=VV#69]]}
bind 25 lq_anf__dx2 : {VV#70 : int | [(VV#70 = (0  :  int))]}
bind 26 lq_anf__dx3 : {VV#73 : Bool | [((? Prop([VV#73])) <=> (lq_anf__dx1 >= lq_anf__dx2))]}
bind 27 prop_abs#rkk : {VV#65 : Bool | [k_66]}
bind 28 VV#75 : {VV#75 : Bool | [(? Prop([VV#75]))]}
bind 29 VV#77 : {VV#77 : Bool | [((? Prop([VV#77])) <=> (lq_anf__dx1 >= lq_anf__dx2));
                                 (VV#77 = lq_anf__dx3)]}
bind 30 VV#79 : {VV#79 : int | [(VV#79 = (0  :  int));
                                (VV#79 = lq_anf__dx2)]}
bind 31 VV#81 : {VV#81 : int | [k_53[VV#52:=VV#81][fix##36#dNum#35#awz:=fix##36#fNumInt#35#r1K][fix##36#dOrd#35#awA:=fix##36#fOrdInt#35#r3n][x#awl:=n1#awm][VV:=VV#81][VV#69:=VV#81];
                                (VV#81 = lq_anf__dx1)]}
bind 32 VV#83 : {VV#83 : int | [(VV#83 = 0)]}
bind 33 VV#85 : {VV#85 : int | [(VV#85 = n1#awm)]}
bind 34 VV#87 : {VV#87 : int | [(VV#87 = (0  :  int));
                                (VV#87 = lq_anf__dx0)]}
bind 35 VV#89 : {VV#89 : int | [(VV#89 = 0)]}
bind 36 VV#91 : {VV#91 : int | [(VV#91 = 0);
                                (VV#91 = lq_anf__dwY)]}
bind 37 VV#93 : {VV#93 : int | [(VV#93 = 0);
                                (VV#93 = lq_anf__dwU)]}
bind 38 VV#71 : {VV#71 : int | [k_72]}
bind 39 VV#65 : {VV#65 : Bool | [k_66]}


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 23; 8; 24; 9; 25; 10; 26; 11]
  grd true
  lhs {VV#F1 : Bool | [(? Prop([VV#F1]))]}
  rhs {VV#F1 : Bool | [k_66[VV#65:=VV#F1][VV#75:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [2]


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 23; 8; 24; 9; 25; 10; 26; 11]
  grd true
  lhs {VV#F2 : Bool | [((? Prop([VV#F2])) <=> (lq_anf__dx1 >= lq_anf__dx2));
                       (VV#F2 = lq_anf__dx3)]}
  rhs {VV#F2 : Bool | [(? Prop([VV#F2]))]}
  id 2 tag [2]


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 23; 8; 24; 9; 25; 10; 11]
  grd true
  lhs {VV#F3 : int | [(VV#F3 = (0  :  int)); (VV#F3 = lq_anf__dx2)]}
  rhs {VV#F3 : int | [k_72[_LIQUID_dummy:=fix##36#fOrdInt#35#r3n][x:=lq_anf__dx1][VV#71:=VV#F3][VV#79:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [2]


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 23; 8; 24; 9; 25; 10; 11]
  grd true
  lhs {VV#F4 : int | [k_53[VV#52:=VV#F4][fix##36#dNum#35#awz:=fix##36#fNumInt#35#r1K][fix##36#dOrd#35#awA:=fix##36#fOrdInt#35#r3n][x#awl:=n1#awm][VV:=VV#F4][VV#69:=VV#F4][VV#81:=VV#F4][VV#F:=VV#F4];
                      (VV#F4 = lq_anf__dx1)]}
  rhs {VV#F4 : int | [k_72[_LIQUID_dummy:=fix##36#fOrdInt#35#r3n][VV#71:=VV#F4][VV#81:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [2]


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 23; 8; 9; 10; 11]
  grd true
  lhs {VV#F5 : int | [(VV#F5 = n1#awm)]}
  rhs {VV#F5 : int | [k_50[VV#49:=VV#F5][fix##36#dNum#35#awz:=fix##36#fNumInt#35#r1K][fix##36#dOrd#35#awA:=fix##36#fOrdInt#35#r3n][VV:=VV#F5][VV#85:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [2]


constraint:
  env [0;
       16;
       1;
       17;
       2;
       3;
       4;
       5;
       21;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F6 : a_awy | [k_50[VV#49:=VV#F6][VV#F:=VV#F6];
                        (VV#F6 = x#awl)]}
  rhs {VV#F6 : a_awy | [k_53[VV#52:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [1]


constraint:
  env [0;
       16;
       1;
       17;
       2;
       18;
       3;
       19;
       4;
       20;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15]
  grd true
  lhs {VV#F7 : a_awy | [(VV#F7 = (lq_anf__dwZ - x#awl))]}
  rhs {VV#F7 : a_awy | [k_53[VV#52:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [1]


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  grd true
  lhs {VV#F8 : a_awy | [(VV#F8 = lq_anf__dwU);
                        (VV#F8 = lq_anf__dwV)]}
  rhs {VV#F8 : a_awy | [k_57[_LIQUID_dummy:=fix##36#dOrd#35#awA][x:=x#awl][VV#56:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [1]


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  grd true
  lhs {VV#F9 : a_awy | [k_50[VV#49:=VV#F9][VV#F:=VV#F9];
                        (VV#F9 = x#awl)]}
  rhs {VV#F9 : a_awy | [k_57[_LIQUID_dummy:=fix##36#dOrd#35#awA][VV#56:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [1]


wf:
  env [0; 1; 2; 3; 4; 5; 6; 22; 7; 23; 8; 24; 9; 25; 10; 11]
  reft {VV#71 : int | [k_72]}
  


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11]
  reft {VV#65 : Bool | [k_66]}
  


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12]
  reft {VV#49 : a_awy | [k_50]}
  


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15]
  reft {VV#56 : a_awy | [k_57]}
  


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13]
  reft {VV#52 : a_awy | [k_53]}
  

