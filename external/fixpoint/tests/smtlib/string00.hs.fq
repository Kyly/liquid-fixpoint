//qualif NonNull(v: [a])        : (? (nonnull([v])))
//qualif Null(v: [a])           : (~ (? (nonnull([v]))))
//qualif EqNull(v:Bool, ~A: [a]): (Prop(v) <=> (? (nonnull([~A]))))

qualif IsEmp(v:Bool, ~A: [a]) : (Prop(v) <=> len([~A]) [ > ;  = ] 0)
qualif ListZ(v: [a])          : len([v]) [ = ; >= ; > ] 0 
qualif SameLen(v:[a], ~A:[b]) : len([v]) = len([~A]) 
qualif EqLen(v:int, ~A: [a])  : v = len([~A]) 
qualif LenEq(v:[a], ~A: int)  : ~A = len([v]) 
qualif LenAcc(v:int, ~A:[a], ~B: int): v = len([~A]) + ~B
qualif LenDiff(v:[a], ~A:int): len([v]) = (~A [ +; - ] 1)
//BOT: Do not delete EVER!

qualif Bot(v:@(0))    : 0 = 1 
qualif Bot(v:obj)     : 0 = 1 
qualif Bot(v:a)       : 0 = 1 
qualif Bot(v:bool)    : 0 = 1 
qualif Bot(v:int)     : 0 = 1 
qualif CmpZ(v:a)      : v [ < ; <= ; > ; >= ; = ; != ] 0
qualif Cmp(v:a,~A:a)  : v [ < ; <= ; > ; >= ; = ; != ] ~A
qualif One(v:int)     : v = 1
qualif True(v:bool)   : (? v) 
qualif False(v:bool)  : ~ (? v) 
qualif True1(v:Bool)   : Prop(v) 
qualif False1(v:Bool)  : ~ Prop(v) 


qualif Papp(v:a,~P:Pred a) : papp1(~P, v)
constant papp1 : func(2, [Pred @(0); @(1); bool])

qualif Papp2(v:a,~X:b,~P:Pred a b) : papp2(~P, v, ~X)
constant papp2 : func(4, [Pred @(0) @(1); @(2); @(3); bool])

constant Prop : func(0, [Bool; bool])
constant cmp : func(0, [Ordering; Ordering])
constant fromJust : func(1, [Maybe @(0); @(0)])
constant isJust : func(1, [Maybe @(0); bool])
constant len : func(1, [[@(0)]; int])
constant fix##36##36##34#dog#34# : Addr#
bind 0 unpackCString##0k : {VV : func(0, [Addr#; [Char]]) | []}
bind 1 liquidAssertB#r7 : {VV : func(0, [Bool; Bool]) | []}
bind 2 liquidAssertB#r7 : {VV : func(0, [Bool; Bool]) | []}
bind 3 EQ#6U : {VV#20 : Ordering | [(cmp([VV#20]) = EQ#6U)]}
bind 4 LT#6S : {VV#21 : Ordering | [(cmp([VV#21]) = LT#6S)]}
bind 5 GT#6W : {VV#24 : Ordering | [(cmp([VV#24]) = GT#6W)]}
bind 6 foo#ruf : {VV#30 : [Char] | [(len([VV#30]) >= 0)]}
bind 7 lq_anf__dFJ : {VV#33 : int | [(VV#33 = 0)]}
bind 8 lq_anf__dFK : {VV#34 : int | [(VV#34 = 0)]}
bind 9 lq_anf__dFL : {VV#37 : Bool | [((? Prop([VV#37])) <=> (lq_anf__dFJ = lq_anf__dFK))]}
bind 10 prop1#rug : {VV#31 : Bool | [k_32]}
bind 11 lq_anf__dFM : {VV#41 : int | [(VV#41 = 1)]}
bind 12 lq_anf__dFN : {VV#42 : int | [(VV#42 = 0)]}
bind 13 lq_anf__dFO : {VV#45 : Bool | [((? Prop([VV#45])) <=> (lq_anf__dFM != lq_anf__dFN))]}
bind 14 prop2#ruh : {VV#39 : Bool | [k_40]}
bind 15 VV#47 : {VV#47 : Bool | [(? Prop([VV#47]))]}
bind 16 VV#49 : {VV#49 : Bool | [((? Prop([VV#49])) <=> (lq_anf__dFM != lq_anf__dFN));
                                 (VV#49 = lq_anf__dFO)]}
bind 17 VV#51 : {VV#51 : int | [(VV#51 = 0);
                                (VV#51 = lq_anf__dFN)]}
bind 18 VV#53 : {VV#53 : int | [(VV#53 = 1);
                                (VV#53 = lq_anf__dFM)]}
bind 19 VV#55 : {VV#55 : Bool | [(? Prop([VV#55]))]}
bind 20 VV#57 : {VV#57 : Bool | [((? Prop([VV#57])) <=> (lq_anf__dFJ = lq_anf__dFK));
                                 (VV#57 = lq_anf__dFL)]}
bind 21 VV#59 : {VV#59 : int | [(VV#59 = 0);
                                (VV#59 = lq_anf__dFK)]}
bind 22 VV#61 : {VV#61 : int | [(VV#61 = 0);
                                (VV#61 = lq_anf__dFJ)]}
bind 23 VV#63 : {VV#63 : Addr# | [(VV#63 = fix##36##36##34#dog#34#)]}
bind 24 VV#43 : {VV#43 : int | [k_44]}
bind 25 VV#39 : {VV#39 : Bool | [k_40]}
bind 26 VV#35 : {VV#35 : int | [k_36]}
bind 27 VV#31 : {VV#31 : Bool | [k_32]}


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 10; 11; 12; 13]
  grd true
  lhs {VV#F1 : Bool | [(? Prop([VV#F1]))]}
  rhs {VV#F1 : Bool | [k_40[VV#39:=VV#F1][VV#47:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [1]


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 10; 11; 12; 13]
  grd true
  lhs {VV#F2 : Bool | [((? Prop([VV#F2])) <=> (lq_anf__dFM != lq_anf__dFN));
                       (VV#F2 = lq_anf__dFO)]}
  rhs {VV#F2 : Bool | [(? Prop([VV#F2]))]}
  id 2 tag [1]


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 10; 11; 12]
  grd true
  lhs {VV#F3 : int | [(VV#F3 = 0); (VV#F3 = lq_anf__dFN)]}
  rhs {VV#F3 : int | [k_44[_LIQUID_dummy:=fix##36#fEqInteger#35#rin][x:=lq_anf__dFM][VV#43:=VV#F3][VV#51:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [1]


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 10; 11; 12]
  grd true
  lhs {VV#F4 : int | [(VV#F4 = 1); (VV#F4 = lq_anf__dFM)]}
  rhs {VV#F4 : int | [k_44[_LIQUID_dummy:=fix##36#fEqInteger#35#rin][VV#43:=VV#F4][VV#53:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [1]


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  grd true
  lhs {VV#F5 : Bool | [(? Prop([VV#F5]))]}
  rhs {VV#F5 : Bool | [k_32[VV#31:=VV#F5][VV#55:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [2]


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]
  grd true
  lhs {VV#F6 : Bool | [((? Prop([VV#F6])) <=> (lq_anf__dFJ = lq_anf__dFK));
                       (VV#F6 = lq_anf__dFL)]}
  rhs {VV#F6 : Bool | [(? Prop([VV#F6]))]}
  id 6 tag [2]


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8]
  grd true
  lhs {VV#F7 : int | [(VV#F7 = 0); (VV#F7 = lq_anf__dFK)]}
  rhs {VV#F7 : int | [k_36[_LIQUID_dummy:=fix##36#fEqInteger#35#rin][x:=lq_anf__dFJ][VV#35:=VV#F7][VV#59:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [2]


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8]
  grd true
  lhs {VV#F8 : int | [(VV#F8 = 0); (VV#F8 = lq_anf__dFJ)]}
  rhs {VV#F8 : int | [k_36[_LIQUID_dummy:=fix##36#fEqInteger#35#rin][VV#35:=VV#F8][VV#61:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [2]


wf:
  env [0; 1; 2; 3; 4; 5; 6; 10; 11; 12]
  reft {VV#43 : int | [k_44]}
  


wf:
  env [0; 1; 2; 3; 4; 5; 6; 10]
  reft {VV#39 : Bool | [k_40]}
  


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8]
  reft {VV#35 : int | [k_36]}
  


wf:
  env [0; 1; 2; 3; 4; 5; 6]
  reft {VV#31 : Bool | [k_32]}
  

