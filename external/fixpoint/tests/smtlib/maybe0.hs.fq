//qualif NonNull(v: [a])        : (? (nonnull([v])))
//qualif Null(v: [a])           : (~ (? (nonnull([v]))))
//qualif EqNull(v:Bool, ~A: [a]): (Prop(v) <=> (? (nonnull([~A]))))

qualif IsEmp(v:Bool, ~A: [a]) : (Prop(v) <=> len([~A]) [ > ;  = ] 0)
qualif ListZ(v: [a])          : len([v]) [ = ; >= ; > ] 0 
qualif SameLen(v:[a], ~A:[b]) : len([v]) = len([~A]) 
qualif EqLen(v:int, ~A: [a])  : v = len([~A]) 
qualif LenEq(v:[a], ~A: int)  : ~A = len([v]) 
qualif LenAcc(v:int, ~A:[a], ~B: int): v = len([~A]) + ~B
qualif LenDiff(v:[a], ~A:int): len([v]) = (~A [ +; - ] 1)
//BOT: Do not delete EVER!

qualif Bot(v:@(0))    : 0 = 1 
qualif Bot(v:obj)     : 0 = 1 
qualif Bot(v:a)       : 0 = 1 
qualif Bot(v:bool)    : 0 = 1 
qualif Bot(v:int)     : 0 = 1 
qualif CmpZ(v:a)      : v [ < ; <= ; > ; >= ; = ; != ] 0
qualif Cmp(v:a,~A:a)  : v [ < ; <= ; > ; >= ; = ; != ] ~A
qualif One(v:int)     : v = 1
qualif True(v:bool)   : (? v) 
qualif False(v:bool)  : ~ (? v) 
qualif True1(v:Bool)   : Prop(v) 
qualif False1(v:Bool)  : ~ Prop(v) 


qualif Papp(v:a,~P:Pred a) : papp1(~P, v)
constant papp1 : func(2, [Pred @(0); @(1); bool])

qualif Papp2(v:a,~X:b,~P:Pred a b) : papp2(~P, v, ~X)
constant papp2 : func(4, [Pred @(0) @(1); @(2); @(3); bool])

constant Prop : func(0, [Bool; bool])
qualif Auto(VV : a_anf , ~A0 : Maybe a_anf): ((? isJust([~A0])) => (fromJust([~A0]) = VV))
qualif Auto(VV : Bool , ~A0 : Maybe t_anc): ((? isJust([~A0])) <=> (? Prop([VV])))
constant cmp : func(0, [Ordering; Ordering])
constant fromJust : func(1, [Maybe @(0); @(0)])
constant isJust : func(1, [Maybe @(0); bool])
constant len : func(1, [[@(0)]; int])
constant Just#r7t : func(1, [@(0); Maybe @(0)])
constant Nothing#r7s : func(1, [Maybe @(0)])
constant fix##36##36##34#pos#47#maybe0.hs#58#7#58#1#45#17#124#function#32#foo#34# : Addr#
bind 0 realWorld##0f : {VV#5 : State# RealWorld | []}
bind 1 False#68 : {VV#6 : Bool | []}
bind 2 True#6u : {VV#7 : Bool | []}
bind 3 True#6u : {VV#10 : Bool | [(? Prop([VV#10]))]}
bind 4 False#68 : {VV#11 : Bool | [(~ ((? Prop([VV#11]))))]}
bind 5 EQ#6U : {VV#19 : Ordering | [(cmp([VV#19]) = EQ#6U)]}
bind 6 LT#6S : {VV#20 : Ordering | [(cmp([VV#20]) = LT#6S)]}
bind 7 GT#6W : {VV#22 : Ordering | [(cmp([VV#22]) = GT#6W)]}
bind 8 ds_dnk : {VV#28 : Maybe t_anc | [k_29]}
bind 9 lq_anf__dnr : {VV#28 : Maybe t_anc | [k_29;
                                             (VV#28 = ds_dnk)]}
bind 10 lq_anf__dnr : {VV#28 : Maybe t_anc | [k_29;
                                              (VV#28 = ds_dnk);
                                              (VV#28 = Nothing#r7s([]));
                                              ((? isJust([VV#28])) <=> false)]}
bind 11 lq_anf__dnr : {VV#28 : Maybe t_anc | [k_29;
                                              (VV#28 = ds_dnk);
                                              (VV#28 = Just#r7t([x#an6]));
                                              (fromJust([VV#28]) = x#an6);
                                              ((? isJust([VV#28])) <=> true)]}
bind 12 x#an6 : {VV#26 : t_anc | [k_27[VV#28:=lq_anf__dnr][x:=x#an6]]}
bind 13 ds_dnn : {VV#39 : Maybe a_anf | [k_40]}
bind 14 lq_anf__dns : {VV#39 : Maybe a_anf | [k_40;
                                              (VV#39 = ds_dnn)]}
bind 15 lq_anf__dns : {VV#39 : Maybe a_anf | [k_40;
                                              (VV#39 = ds_dnn);
                                              (VV#39 = Nothing#r7s([]));
                                              ((? isJust([VV#39])) <=> false)]}
bind 16 ds_dnp : {VV#48 : State# RealWorld | [k_49]}
bind 17 lq_anf__dns : {VV#39 : Maybe a_anf | [k_40;
                                              (VV#39 = ds_dnn);
                                              (VV#39 = Just#r7t([x#an5]));
                                              (fromJust([VV#39]) = x#an5);
                                              ((? isJust([VV#39])) <=> true)]}
bind 18 x#an5 : {VV#37 : a_anf | [k_38[VV#39:=lq_anf__dns][x:=x#an5]]}
bind 19 VV#55 : {VV#55 : Maybe a_anf | []}
bind 20 x : {VV#57 : Maybe a_anf | []}
bind 21 VV#58 : {VV#58 : State# RealWorld | [(VV#58 = realWorld##0f)]}
bind 22 VV#60 : {VV#60 : RealWorld | []}
bind 23 VV#62 : {VV#62 : Addr# | [(VV#62 = fix##36##36##34#pos#47#maybe0.hs#58#7#58#1#45#17#124#function#32#foo#34#)]}
bind 24 VV#64 : {VV#64 : Maybe t_anc | []}
bind 25 x : {VV#66 : Maybe t_anc | []}
bind 26 VV#67 : {VV#67 : Bool | [k_32[ds_dnk:=x][VV#31:=VV#67]]}
bind 27 VV#69 : {VV#69 : Bool | [(? Prop([VV#69]));
                                 (VV#69 = True#6u)]}
bind 28 VV#71 : {VV#71 : Bool | [(~ ((? Prop([VV#71]))));
                                 (VV#71 = False#68)]}
bind 29 VV#39 : {VV#39 : Maybe a_anf | [k_40]}
bind 30 VV#48 : {VV#48 : State# RealWorld | [k_49]}
bind 31 VV#46 : {VV#46 : RealWorld | [k_47]}
bind 32 VV#28 : {VV#28 : Maybe t_anc | [k_29]}
bind 33 VV#31 : {VV#31 : Bool | [k_32]}


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7]
  grd true
  lhs {VV#F1 : Maybe a_anf | []}
  rhs {VV#F1 : Maybe a_anf | [k_40[VV#39:=VV#F1][VV#55:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [2]


constraint:
  env [0; 1; 2; 3; 19; 4; 5; 6; 7]
  grd true
  lhs {VV#F2 : a_anf | []}
  rhs {VV#F2 : a_anf | [k_38[VV#39:=VV#55][VV#37:=VV#F2][VV#F:=VV#F2]]}
  id 2 tag [2]


constraint:
  env [0; 1; 2; 3; 4; 20; 5; 6; 7]
  grd true
  lhs {VV#F3 : a_anf | [k_43[ds_dnn:=x][VV#42:=VV#F3][VV#F:=VV#F3]]}
  rhs {VV#F3 : a_anf | [((? isJust([x])) => (fromJust([x]) = VV#F3))]}
  id 3 tag [2]


constraint:
  env [0; 1; 17; 2; 18; 3; 4; 5; 6; 7; 13; 14]
  grd true
  lhs {VV#F4 : a_anf | [k_38[VV#39:=lq_anf__dns][x:=x#an5][VV#37:=VV#F4][VV#F:=VV#F4];
                        (VV#F4 = x#an5)]}
  rhs {VV#F4 : a_anf | [k_43[VV#42:=VV#F4][VV#F:=VV#F4]]}
  id 4 tag [2]


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 13; 14; 15]
  grd true
  lhs {VV#F5 : a_anf | [k_52[lq_tmp_x0:=fix##36##36##34#pos#47#maybe0.hs#58#7#58#1#45#17#124#function#32#foo#34#][ds_dnp:=realWorld##0f][VV#51:=VV#F5][VV#F:=VV#F5]]}
  rhs {VV#F5 : a_anf | [k_43[VV#42:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [2]


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 13; 14; 15]
  grd true
  lhs {VV#F6 : State# RealWorld | [(VV#F6 = realWorld##0f)]}
  rhs {VV#F6 : State# RealWorld | [k_49[VV#48:=VV#F6][VV#58:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [2]


constraint:
  env [0; 1; 2; 3; 4; 5; 21; 6; 7; 13; 14; 15]
  grd true
  lhs {VV#F7 : RealWorld | []}
  rhs {VV#F7 : RealWorld | [k_47[VV#48:=VV#58][VV#46:=VV#F7][VV#60:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [2]


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7]
  grd true
  lhs {VV#F8 : Maybe t_anc | []}
  rhs {VV#F8 : Maybe t_anc | [k_29[VV#28:=VV#F8][VV#64:=VV#F8][VV#F:=VV#F8]]}
  id 8 tag [1]


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 24]
  grd true
  lhs {VV#F9 : t_anc | []}
  rhs {VV#F9 : t_anc | [k_27[VV#28:=VV#64][VV#26:=VV#F9][VV#F:=VV#F9]]}
  id 9 tag [1]


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 25]
  grd true
  lhs {VV#F10 : Bool | [k_32[ds_dnk:=x][VV#31:=VV#F10][VV#67:=VV#F10][VV#F:=VV#F10]]}
  rhs {VV#F10 : Bool | [((? isJust([x])) <=> (? Prop([VV#F10])))]}
  id 10 tag [1]


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 11; 12]
  grd true
  lhs {VV#F11 : Bool | [(? Prop([VV#F11])); (VV#F11 = True#6u)]}
  rhs {VV#F11 : Bool | [k_32[VV#31:=VV#F11][VV#69:=VV#F11][VV#F:=VV#F11]]}
  id 11 tag [1]


constraint:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10]
  grd true
  lhs {VV#F12 : Bool | [(~ ((? Prop([VV#F12]))));
                        (VV#F12 = False#68)]}
  rhs {VV#F12 : Bool | [k_32[VV#31:=VV#F12][VV#71:=VV#F12][VV#F:=VV#F12]]}
  id 12 tag [1]


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7]
  reft {VV#39 : Maybe a_anf | [k_40]}
  


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 29]
  reft {VV#37 : a_anf | [k_38]}
  


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 13; 14; 15]
  reft {VV#48 : State# RealWorld | [k_49]}
  


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 13; 14; 30; 15]
  reft {VV#46 : RealWorld | [k_47]}
  


wf:
  env [0; 16; 1; 2; 3; 4; 5; 6; 7; 13; 14; 15]
  reft {VV#51 : a_anf | [k_52]}
  


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 13]
  reft {VV#42 : a_anf | [k_43]}
  


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7]
  reft {VV#28 : Maybe t_anc | [k_29]}
  


wf:
  env [0; 32; 1; 2; 3; 4; 5; 6; 7]
  reft {VV#26 : t_anc | [k_27]}
  


wf:
  env [0; 1; 2; 3; 4; 5; 6; 7; 8]
  reft {VV#31 : Bool | [k_32]}
  

