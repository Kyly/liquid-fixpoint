//qualif NonNull(v: [a])        : (? (nonnull([v])))
//qualif Null(v: [a])           : (~ (? (nonnull([v]))))
//qualif EqNull(v:Bool, ~A: [a]): (Prop(v) <=> (? (nonnull([~A]))))

qualif IsEmp(v:Bool, ~A: [a]) : (Prop(v) <=> len([~A]) [ > ;  = ] 0)
qualif ListZ(v: [a])          : len([v]) [ = ; >= ; > ] 0 
qualif SameLen(v:[a], ~A:[b]) : len([v]) = len([~A]) 
qualif EqLen(v:int, ~A: [a])  : v = len([~A]) 
qualif LenEq(v:[a], ~A: int)  : ~A = len([v]) 
qualif LenAcc(v:int, ~A:[a], ~B: int): v = len([~A]) + ~B
qualif LenDiff(v:[a], ~A:int): len([v]) = (~A [ +; - ] 1)
//BOT: Do not delete EVER!

qualif Bot(v:@(0))    : 0 = 1 
qualif Bot(v:obj)     : 0 = 1 
qualif Bot(v:a)       : 0 = 1 
qualif Bot(v:bool)    : 0 = 1 
qualif Bot(v:int)     : 0 = 1 
qualif CmpZ(v:a)      : v [ < ; <= ; > ; >= ; = ; != ] 0
qualif Cmp(v:a,~A:a)  : v [ < ; <= ; > ; >= ; = ; != ] ~A
qualif One(v:int)     : v = 1
qualif True(v:bool)   : (? v) 
qualif False(v:bool)  : ~ (? v) 
qualif True1(v:Bool)   : Prop(v) 
qualif False1(v:Bool)  : ~ Prop(v) 


qualif Papp(v:a,~P:Pred a) : papp1(~P, v)
constant papp1 : func(2, [Pred @(0); @(1); bool])

qualif Papp2(v:a,~X:b,~P:Pred a b) : papp2(~P, v, ~X)
constant papp2 : func(4, [Pred @(0) @(1); @(2); @(3); bool])

constant Prop : func(0, [Bool; bool])
constant cmp : func(0, [Ordering; Ordering])
constant fromJust : func(1, [Maybe @(0); @(0)])
constant isJust : func(1, [Maybe @(0); bool])
constant len : func(1, [[@(0)]; int])
bind 0 LT#6S : {VV#21 : Ordering | [(cmp([VV#21]) = LT#6S)]}
bind 1 EQ#6U : {VV#22 : Ordering | [(cmp([VV#22]) = EQ#6U)]}
bind 2 GT#6W : {VV#24 : Ordering | [(cmp([VV#24]) = GT#6W)]}
bind 3 zs#abg : {VV#32 : [int] | [k_33; (len([VV#32]) >= 0)]}
bind 4 lq_anf__dbk : {VV : func(0, [int; int; int]) | []}
bind 5 foo#r9G : {VV : func(0, [[int]; [int]]) | []}
bind 6 VV#50 : {VV#50 : [int] | [(len([VV#50]) = len([zs#abg]));
                                 (len([VV#50]) >= 0)]}
bind 7 VV#52 : {VV#52 : int | [k_48[dummy..home.rjhala.research.liquidhaskell.include.ghc.list.lhs.716.23:=lq_anf__dbk][xs:=zs#abg][ys:=zs#abg][VV:=VV#50][VV#47:=VV#52]]}
bind 8 lq_tmp_x39 : {VV#54 : int | []}
bind 9 VV#55 : {VV#55 : int | []}
bind 10 VV#57 : {VV#57 : [int] | [k_33[VV#32:=VV#57];
                                  (len([VV#57]) >= 0);
                                  (VV#57 = zs#abg);
                                  (len([VV#57]) >= 0)]}
bind 11 VV#59 : {VV#59 : int | [k_28[VV#32:=VV#57][VV#27:=VV#59]]}
bind 12 VV#61 : {VV#61 : int | [k_30[VV#29:=VV#61]]}
bind 13 VV#63 : {VV#63 : [int] | [k_33[VV#32:=VV#63];
                                  (len([VV#63]) >= 0);
                                  (VV#63 = zs#abg);
                                  (len([VV#63]) >= 0)]}
bind 14 VV#65 : {VV#65 : int | [k_28[VV#32:=VV#63][VV#27:=VV#65]]}
bind 15 VV#67 : {VV#67 : int | [k_30[VV#29:=VV#67]]}
bind 16 VV#69 : {VV#69 : int | [k_44[VV#43:=VV#69]]}
bind 17 dummy..home.rjhala.research.liquidhaskell.include.ghc.list.lhs.716.24 : {VV#43 : int | [k_44]}
bind 18 VV#72 : {VV#72 : int | [k_46[VV#45:=VV#72]]}
bind 19 dummy..home.rjhala.research.liquidhaskell.include.ghc.list.lhs.716.29 : {VV#45 : int | [k_46]}
bind 20 VV#75 : {VV#75 : int | [(VV#75 = (dummy..home.rjhala.research.liquidhaskell.include.ghc.list.lhs.716.24 + dummy..home.rjhala.research.liquidhaskell.include.ghc.list.lhs.716.29))]}
bind 21 VV#32 : {VV#32 : [int] | [k_33; (len([VV#32]) >= 0)]}
bind 22 VV#27 : {VV#27 : int | [k_28]}
bind 23 lq_tmp_x31 : {VV#79 : int | []}
bind 24 VV#29 : {VV#29 : int | [k_30]}
bind 25 VV#47 : {VV#47 : int | [k_48]}
bind 26 VV#45 : {VV#45 : int | [k_46]}
bind 27 VV#43 : {VV#43 : int | [k_44]}
bind 28 VV#40 : {VV#40 : [int] | [k_41; (len([VV#40]) >= 0)]}
bind 29 VV#35 : {VV#35 : int | [k_36]}
bind 30 lq_tmp_x39 : {VV#86 : int | []}
bind 31 VV#37 : {VV#37 : int | [k_38]}


constraint:
  env [0; 1; 2; 3; 4]
  grd true
  lhs {VV#F1 : [int] | [(len([VV#F1]) = len([zs#abg]))]}
  rhs {VV#F1 : [int] | [k_41[VV#40:=VV#F1][VV#50:=VV#F1][VV#F:=VV#F1]]}
  id 1 tag [1]


constraint:
  env [0; 1; 2; 3; 4; 6]
  grd true
  lhs {VV#F2 : int | [k_48[dummy..home.rjhala.research.liquidhaskell.include.ghc.list.lhs.716.23:=lq_anf__dbk][xs:=zs#abg][ys:=zs#abg][VV:=VV#50][VV#47:=VV#F2][VV#52:=VV#F2][VV#F:=VV#F2]]}
  rhs {VV#F2 : int | [k_36[VV#40:=VV#50][VV#35:=VV#F2][VV#52:=VV#F2][VV#F:=VV#F2]]}
  id 2 tag [1]


constraint:
  env [0; 1; 2; 3; 4; 8]
  grd true
  lhs {VV#F3 : int | []}
  rhs {VV#F3 : int | [k_38[VV#37:=VV#F3][VV#55:=VV#F3][VV#F:=VV#F3]]}
  id 3 tag [1]


constraint:
  env [0; 1; 2; 3; 4]
  grd true
  lhs {VV#F4 : [int] | [k_33[VV#32:=VV#F4][VV#57:=VV#F4][VV#F:=VV#F4];
                        (len([VV#F4]) >= 0);
                        (VV#F4 = zs#abg)]}
  rhs {VV#F4 : [int] | [(len([VV#F4]) = len([zs#abg]))]}
  id 4 tag [1]


constraint:
  env [0; 1; 2; 3; 4; 10]
  grd true
  lhs {VV#F5 : int | [k_28[VV#32:=VV#57][VV#27:=VV#F5][VV#59:=VV#F5][VV#F:=VV#F5]]}
  rhs {VV#F5 : int | [k_46[dummy..home.rjhala.research.liquidhaskell.include.ghc.list.lhs.716.23:=lq_anf__dbk][xs:=zs#abg][VV:=VV#57][VV#45:=VV#F5][VV#59:=VV#F5][VV#F:=VV#F5]]}
  id 5 tag [1]


constraint:
  env [0; 1; 2; 3; 4; 13]
  grd true
  lhs {VV#F6 : int | [k_28[VV#32:=VV#63][VV#27:=VV#F6][VV#65:=VV#F6][VV#F:=VV#F6]]}
  rhs {VV#F6 : int | [k_44[dummy..home.rjhala.research.liquidhaskell.include.ghc.list.lhs.716.23:=lq_anf__dbk][VV:=VV#63][VV#43:=VV#F6][VV#65:=VV#F6][VV#F:=VV#F6]]}
  id 6 tag [1]


constraint:
  env [0; 1; 17; 2; 3; 19; 4]
  grd true
  lhs {VV#F7 : int | [(VV#F7 = (dummy..home.rjhala.research.liquidhaskell.include.ghc.list.lhs.716.24 + dummy..home.rjhala.research.liquidhaskell.include.ghc.list.lhs.716.29))]}
  rhs {VV#F7 : int | [k_48[VV#47:=VV#F7][VV#75:=VV#F7][VV#F:=VV#F7]]}
  id 7 tag [1]


wf:
  env [0; 1; 2]
  reft {VV#32 : [int] | [k_33]}
  


wf:
  env [0; 1; 2; 21]
  reft {VV#27 : int | [k_28]}
  


wf:
  env [0; 1; 2; 23]
  reft {VV#29 : int | [k_30]}
  


wf:
  env [0; 1; 2; 3; 4]
  reft {VV#47 : int | [k_48]}
  


wf:
  env [0; 1; 2; 3; 4]
  reft {VV#45 : int | [k_46]}
  


wf:
  env [0; 1; 2; 3; 4]
  reft {VV#43 : int | [k_44]}
  


wf:
  env [0; 1; 2; 3]
  reft {VV#40 : [int] | [k_41]}
  


wf:
  env [0; 1; 2; 3; 28]
  reft {VV#35 : int | [k_36]}
  


wf:
  env [0; 1; 2; 3; 30]
  reft {VV#37 : int | [k_38]}
  

